<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper表示根标签-->
<mapper namespace="com.xing.mapper.StaffMapper">

    <!--
        mapper接口和映射文件要保持一致
        1.mapper接口的全类名和映射文件namespace一致
        2.mapper接口中的方法的方法名要和映射文件中的sql的id保持一致
    -->


    <resultMap id="staffMap" type="Staff">
        <id column="employeeId" property="employeeId"></id>
        <result column="employeeName" property="employeeName"></result>
        <result column="department" property="department"></result>
        <result column="position" property="position"></result>
    </resultMap>
    <!--查询所有用户-->
    <select id="findAllStaff" resultMap="staffMap">
        select * from staff;
    </select>

<!--    &lt;!&ndash;查询某一个用户&ndash;&gt;-->
<!--    <select id="findStaffById" parameterType="int" resultType="Staff">-->
<!--        select * from Staff where id = #{id};-->
<!--    </select>-->

    <!--
        增加员工信息（员工入职）
        int addStaff(Staff staff);
    -->
    <insert id="addStaff"  parameterType="Staff">
        insert into staff values(null,#{employeeName},#{department},#{position});
    </insert>

    <!--
        删除员工信息（根据员工的编号，操作员工离职）
        int deleteStaff(int id);
    -->
    <delete id="deleteStaff" parameterType="int">
        delete from staff where employeeId = #{id};
    </delete>

    <!--
         // 根据员工姓名查找员工信息
        Staff findStaffByName(String employeeName);
    -->
    <select id="findStaffByName" resultMap="staffMap">
        select * from staff where employeeName = #{employeeName}
    </select>

    <!--
        //修改员工信息
        Staff editEmployeeMap(HashMap<String ,Object> map);
    -->
    <update id="editEmployeeMap" parameterType="Staff">
        update staff set department = #{department},position = #{position} where employeeName=#{employeeName}
    </update>




</mapper>
